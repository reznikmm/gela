Synthesized attributes
  access_definition,
  allocator,
  anonymous_access_to_function_definition,
  anonymous_access_to_object_definition,
  anonymous_access_to_procedure_definition,
  attribute_reference,
  case_expression,
  character_literal,
  clause_name,
  component_definition,
  composite_constraint,
  constrained_array_definition,
  constraint,
  delta_constraint,
  digits_constraint,
  direct_name,
  discrete_subtype_definition,
  discrete_subtype_indication,
  discrete_range_attribute_reference,
  discrete_simple_expression_range,
  explicit_dereference,
  expression,
  extension_aggregate,
  function_call,
  identifier,
  if_expression,
  membership_test,
  name,
  null_literal,
  numeric_literal,
  object_declaration,
  object_definition,
  operator_symbol,
  parameter_specification,
  prefix,
  program_unit_name,
  qualified_expression,
  quantified_expression,
  range_attribute_reference,
  range_constraint,
  record_aggregate,
  scalar_constraint,
  selected_component,
  selected_identifier,
  short_circuit,
  simple_expression,
  simple_expression_range,
  subtype_indication,
  subtype_indication_or_access_definition,
  subtype_mark,
  subtype_mark_or_access_definition,
  unconstrained_array_definition,
  Discrete_Subtype_Definitions,
  Index_Subtype_Definitions

   : Gela.Semantic_Types.Error_Set_Index : Errors;

Rules for identifier.identifier_token :
(.
        ${identifier.Errors} := 0;  --  ${identifier.Down}
.)

Rules for selected_identifier. :
(.
      ${selected_identifier.Errors} := 0;  --  ${Selector.Defining_Name}
.)

Rules for selected_component. :
(.
      ${selected_component.Errors} := 0;  --  ${Selector.Defining_Name}
.)

Rules for attribute_reference. :
(.
      ${attribute_reference.Errors} := 0;  -- ${prefix.Errors}
.)

Rules for function_call. :
(.
      ${function_call.Errors} := 0;
.)

Rules for subtype_indication. :
(.
      ${subtype_indication.Errors} := 0;  --  ${Subtype_Constraint.Errors}
.)

Rules for delta_constraint. :
(.
      ${delta_constraint.Errors} := 0;
.)

Rules for digits_constraint. :
(.
      ${digits_constraint.Errors} := 0;
.)
Rules for range_attribute_reference.Range_Attribute :
(.
      ${range_attribute_reference.Errors} := 0;
.)
Rules for simple_expression_range. :
(.
      --  ${Upper_Bound.Errors}, ${Lower_Bound.Errors}
      ${simple_expression_range.Errors} := 0;
.)
Rules for composite_constraint. :
(.
      ${composite_constraint.Errors} := 0;
.)
Rules for allocator. :
(.
      ${allocator.Errors} := 0;  --  FIXME
.)
Rules for case_expression. :
(.
      ${case_expression.Errors} := 0;  --  FIXME
.)
Rules for extension_aggregate. :
(.
      ${extension_aggregate.Errors} := 0;  --  FIXME
.)
Rules for if_expression.Expression_Paths :
(.
      ${if_expression.Errors} := 0;  --  FIXME
.)
Rules for null_literal.null_literal_token :
(.
      ${null_literal.Errors} := 0;  --  FIXME
.)
Rules for numeric_literal.numeric_literal_token :
(.
      ${numeric_literal.Errors} := 0;  --  FIXME
.)
Rules for quantified_expression. :
(.
      ${quantified_expression.Errors} := 0;  --  FIXME
.)
Rules for record_aggregate. :
(.
      ${record_aggregate.Errors} := 0;  --  FIXME
.)

Rules for character_literal.character_literal_token :
(.
      ${character_literal.Errors} := 0; --  FIXME
.)
Rules for explicit_dereference. :
(.
      ${explicit_dereference.Errors} := 0; --  FIXME
.)
Rules for operator_symbol.operator_symbol_token :
(.
      ${operator_symbol.Errors} := 0; --  FIXME
.)
Rules for qualified_expression. :
(.
      ${qualified_expression.Errors} := 0; --  FIXME
.)
Rules for object_declaration. :
(.
      ${object_declaration.Errors} := ${Initialization_Expression.Errors};
      --  ${Object_Declaration_Subtype.Errors};
.)
Rules for parameter_specification. :
(.
      ${parameter_specification.Errors} := ${Initialization_Expression.Errors};
      --  ${Object_Declaration_Subtype.Errors};
.)
Rules for membership_test. :
(.
      ${membership_test.Errors} := 0; --  FIXME
.)
Rules for short_circuit. :
(.
      ${short_circuit.Errors} := 0; --  FIXME
.)
Rules for Index_Subtype_Definitions.subtype_mark :
(.
      ${Index_Subtype_Definitions.Errors} := 0;
.)
Rules for Index_Subtype_Definitions.subtype_mark :
(.
      ${Index_Subtype_Definitions.Errors} := ${subtype_mark.Errors};
.)
Rules for Discrete_Subtype_Definitions.discrete_subtype_definition :
(.
      ${Discrete_Subtype_Definitions.Errors} := 0;
.)
Rules for Discrete_Subtype_Definitions.discrete_subtype_definition :
(.
      ${Discrete_Subtype_Definitions.Errors} := ${discrete_subtype_definition.Errors};
.)
Rules for unconstrained_array_definition. :
(.
      ${unconstrained_array_definition.Errors} := ${Index_Subtype_Definitions.Errors};
      --  ${Array_Component_Definition.Errors}
.)
Rules for constrained_array_definition. :
(.
      ${constrained_array_definition.Errors} := ${Discrete_Subtype_Definitions.Errors};
      --  ${Array_Component_Definition.Errors}
.)

Rules for component_definition. :
(.
      ${component_definition.Errors} := ${Component_Subtype_Indication.Errors};
.)

Rules for anonymous_access_to_object_definition. :
(.
      ${anonymous_access_to_object_definition.Errors} := 0;  --  FIXME
.)
Rules for anonymous_access_to_function_definition. :
(.
      ${anonymous_access_to_function_definition.Errors} := 0;  --  FIXME
.)
Rules for anonymous_access_to_procedure_definition. :
(.
      ${anonymous_access_to_procedure_definition.Errors} := 0;  --  FIXME
.)
Rules for discrete_subtype_indication. :
(.
      ${discrete_subtype_indication.Errors} := 0;  --  FIXME
.)
Rules for discrete_range_attribute_reference.Range_Attribute :
(.
      ${discrete_range_attribute_reference.Errors} := 0;  --  FIXME
.)
Rules for discrete_simple_expression_range. :
(.
      ${discrete_simple_expression_range.Errors} := 0;  --  FIXME
      --  ${Upper_Bound.Errors}, ${Lower_Bound.Errors}
.)
