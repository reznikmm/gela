Synthesized attributes
  Context_Clause_Elements,
  context_item,
  with_clause,
  use_clause,
  use_package_clause,
  use_type_clause,
  pragma_node  : Gela.Lexical_Types.Symbol_List : with_list;

Synthesized attributes
  Context_Clause_Elements,
  context_item,
  with_clause,
  use_clause,
  use_package_clause,
  use_type_clause,
  pragma_node  : Gela.Lexical_Types.Symbol_List : limited_with_list;

Rules for with_clause. :
(.
      if Gela.Lexical_Types.">" (${limited_token.Index}, 0) then
         ${with_clause.with_list} := Gela.Lexical_Types.Empty_Symbol_List;
      else
         ${with_clause.with_list} := ${With_Clause_Names.name_list};
      end if;
.)

Rules for with_clause. :
(.
      if Gela.Lexical_Types."=" (${limited_token.Index}, 0) then
         ${with_clause.limited_with_list} := ${With_Clause_Names.name_list};
      else
         ${with_clause.limited_with_list} := Gela.Lexical_Types.Empty_Symbol_List;
      end if;
.)

Rules for use_package_clause. :
(.
      ${use_package_clause.with_list} := Gela.Lexical_Types.Empty_Symbol_List;
.)

Rules for use_package_clause. :
(.
      ${use_package_clause.limited_with_list} := Gela.Lexical_Types.Empty_Symbol_List;
.)

Rules for use_type_clause. :
(.
      ${use_type_clause.with_list} := Gela.Lexical_Types.Empty_Symbol_List;
.)

Rules for use_type_clause. :
(.
      ${use_type_clause.limited_with_list} := Gela.Lexical_Types.Empty_Symbol_List;
.)

Rules for pragma_node. :
(.
      ${pragma_node.with_list} := Gela.Lexical_Types.Empty_Symbol_List;
.)

Rules for pragma_node. :
(.
      ${pragma_node.limited_with_list} := Gela.Lexical_Types.Empty_Symbol_List;
.)

Rules for Context_Clause_Elements.context_item :
(.
      ${Context_Clause_Elements.with_list} := Gela.Lexical_Types.Empty_Symbol_List;
.)

Rules for Context_Clause_Elements.context_item :
(.
      Self.Compilation.Context.Symbols.Create_List
        (${context_item.with_list}, ${tail.with_list}, ${Context_Clause_Elements.with_list});
.)

Rules for Context_Clause_Elements.context_item :
(.
      ${Context_Clause_Elements.limited_with_list} := Gela.Lexical_Types.Empty_Symbol_List;
.)

Rules for Context_Clause_Elements.context_item :
(.
      Self.Compilation.Context.Symbols.Create_List
        (${context_item.limited_with_list}, ${tail.limited_with_list}, ${Context_Clause_Elements.limited_with_list});
.)
