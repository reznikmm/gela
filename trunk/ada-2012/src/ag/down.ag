Inherited attributes
  access_definition,
  access_to_function_definition,
  access_to_object_definition,
  access_to_procedure_definition,
  allocator,
  anonymous_access_to_function_definition,
  anonymous_access_to_object_definition,
  anonymous_access_to_procedure_definition,
  association,
  association_list,
  attribute_reference,
  box,
  case_expression,
  case_path,
  character_literal,
  clause_name,
  composite_constraint,
  constrained_array_definition,
  constraint,
  decimal_fixed_point_definition,
  delta_constraint,
  derived_record_definition,
  derived_type_definition,
  designator,
  digits_constraint,
  direct_name,
  discrete_choice,
  discrete_range,
  discrete_subtype_indication_dr,
  enumeration_literal,
  enumeration_type_definition,
  exception_choice,
  explicit_dereference,
  expression,
  expression_or_box,
  extension_aggregate,
  floating_point_definition,
  auxiliary_apply,
  generic_formal_parameter,
  identifier,
  if_expression,
  interface_type_definition,
  membership_choice,
  membership_test,
  modular_type_definition,
  name,
  null_literal,
  numeric_literal,
  object_definition,
  operator_symbol,
  ordinary_fixed_point_definition,
  others_choice,
  prefix,
  program_unit_name,
  qualified_expression,
  quantified_expression,
  range_attribute_reference,
  range_attribute_reference_dr,
  range_constraint,
  range_dr,
  record_aggregate,
  record_type_definition,
  root_type_definition,
  scalar_constraint,
  selected_component,
  selected_identifier,
  selector_name,
  short_circuit,
  signed_integer_type_definition,
  simple_expression,
  simple_expression_range,
  simple_expression_range_dr,
  simple_name,
  string_literal,
  subtype_indication,
  subtype_indication_or_access_definition,
  subtype_mark,
  subtype_mark_or_access_definition,
  type_definition,
  unconstrained_array_definition,
  variant,

  Array_Component_Choices,
  Associations,
  Case_Statement_Paths,
  Membership_Test_Choices,
  Record_Component_Associations,
  Variant_Choices,
  Variants
   : Gela.Interpretations.Interpretation_Index : Down;

Rules for Array_Component_Choices.discrete_choice :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Array_Component_Choices.Down}, 1, ${discrete_choice.Down});
.)

Rules for Array_Component_Choices.discrete_choice :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Array_Component_Choices.Down}, 2, ${tail.Down});
.)

Rules for Associations.association :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Associations.Down}, 1, ${association.Down});
.)

Rules for Associations.association :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Associations.Down}, 2, ${tail.Down});
.)

Rules for Record_Component_Associations.association :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Record_Component_Associations.Down}, 1, ${association.Down});
.)

Rules for Record_Component_Associations.association :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Record_Component_Associations.Down}, 2, ${tail.Down});
.)

Rules for accept_statement. :
(.
      ${Accept_Entry_Direct_Name.Down} := 0;  --  FIXME
.)

Rules for accept_statement. :
(.
      ${Accept_Entry_Index.Down} := 0;  --  FIXME
.)

Rules for at_clause. :
(.
      ${Representation_Clause_Name.Down} := 0;  --  FIXME
.)

Rules for at_clause. :
(.
      ${Representation_Clause_Expression.Down} := 0;  --  FIXME
.)

Rules for attribute_definition_clause. :
(.
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${attribute_definition_clause.env_in},
         ${Representation_Clause_Name.Up},
         ${Representation_Clause_Name.Down});
.)

Rules for attribute_definition_clause. :
(.
      Gela.Pass_Utils.Resolve.To_Type_Or_The_Same_Type
        (Self.Compilation,
         ${attribute_definition_clause.env_in},
         ${Representation_Clause_Name.Up},
         ${Representation_Clause_Expression.Up},
         ${Representation_Clause_Expression.Down});
.)

Rules for attribute_reference. :
(.
      ${Attribute_Designator_Identifier.Down} := 0;  --  FIXME
.)

Rules for attribute_reference. :
(.
      ${Attribute_Designator_Expressions.Down} := 0;  --  FIXME
.)

Rules for attribute_reference. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${attribute_reference.Down}, 1, ${prefix.Down});
.)

Rules for component_clause. :
(.
      ${Representation_Clause_Name.Down} := 0;  --  FIXME
.)

Rules for Aborted_Tasks.name :
(.
      ${name.Down} := 0;  --  FIXME
.)

Rules for allocator. :
(.
      ${Subpool_Name.Down} := 0;  --  FIXME
.)

Rules for allocator. :
(.
      ${Subtype_Or_Expression.Down} := 0;  --  FIXME
.)

Rules for aspect_specification. :
(.
      ${Aspect_Definition.Down} := 0;  --  FIXME
.)

Rules for assignment_statement. :
(.
      --  FIXME
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${assignment_statement.env_in},
         ${Assignment_Variable_Name.Up},
         ${Assignment_Variable_Name.Down});
.)

Rules for assignment_statement. :
(.
      --  FIXME
      Gela.Pass_Utils.Resolve.Assignment_Right
        (Self.Compilation,
         ${assignment_statement.env_in},
         ${Assignment_Variable_Name.Up},
         ${Assignment_Expression.Up},
         ${Assignment_Expression.Down});
.)

Rules for association. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${association.Down}, 1, ${Component_Expression.Down});
.)

Rules for association. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${association.Down}, 2, ${Array_Component_Choices.Down});
.)

Rules for association_list. :
(.
      ${Record_Component_Associations.Down} := ${association_list.Down};
.)

Rules for case_expression. :
(.
      ${expression.Down} := 0;  --  FIXME
.)

Rules for case_expression_path. :
(.
      ${Dependent_Expression.Down} := 0;  --  FIXME
.)

Rules for case_statement. :
(.
      --  8.6 (9)
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${case_statement.env_in},
         ${Case_Expression.Up},
         ${Case_Expression.Down});
.)

Rules for component_clause. :
(.
      ${Component_Clause_Position.Down} := 0;  --  FIXME
.)

Rules for component_declaration. :
(.
      ${Initialization_Expression.Down} := 0;  --  FIXME
.)

Rules for composite_constraint. :
(.
      ${Associations.Down} := ${composite_constraint.Down};
.)

Rules for decimal_fixed_point_definition. :
(.
      ${Delta_Expression.Down} := 0;  --  FIXME
.)

Rules for decimal_fixed_point_definition. :
(.
      ${Digits_Expression.Down} := 0;  --  FIXME
.)

Rules for delay_statement. :
(.
      ${Delay_Expression.Down} := 0;  --  FIXME
.)

Rules for delta_constraint. :
(.
      ${Delta_Expression.Down} := 0;  --  FIXME
.)

Rules for digits_constraint. :
(.
      ${Digits_Expression.Down} := 0;  --  FIXME
.)

Rules for Case_Path_Alternative_Choices.discrete_choice :
(.
      ${discrete_choice.Down} := 0;  --  FIXME
.)

Rules for Variant_Choices.discrete_choice :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Variant_Choices.Down}, 1, ${discrete_choice.Down});
.)

Rules for Variant_Choices.discrete_choice :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Variant_Choices.Down}, 2, ${tail.Down});
.)

Rules for discrete_simple_expression_range. :
(.
      Gela.Pass_Utils.Resolve.Discrete_Range_Lower
        (Self.Compilation,
         ${discrete_simple_expression_range.env_in},
         ${Lower_Bound.Up},
         ${Upper_Bound.Up},
         ${Lower_Bound.Down});
.)

Rules for discrete_simple_expression_range. :
(.
      Gela.Pass_Utils.Resolve.Discrete_Range_Upper
        (Self.Compilation,
         ${discrete_simple_expression_range.env_in},
         ${Lower_Bound.Up},
         ${Upper_Bound.Up},
         ${Upper_Bound.Down});
.)

Rules for discriminant_specification. :
(.
      -- 3.7 (7)
      Gela.Pass_Utils.Resolve.To_Type
        (Self.Compilation,
         ${discriminant_specification.env_in},
         ${Object_Declaration_Subtype.Up},
         ${Initialization_Expression.Up:0},
         ${Initialization_Expression.Down});
.)

Rules for element_iterator_specification. :
(.
      ${Iteration_Scheme_Name.Down} := 0;  --  FIXME
.)

Rules for else_expression_path. :
(.
      ${Dependent_Expression.Down} := 0;  --  FIXME
.)

Rules for elsif_expression_path. :
(.
      ${Condition_Expression.Down} := 0;  --  FIXME
.)

Rules for elsif_expression_path. :
(.
      ${Dependent_Expression.Down} := 0;  --  FIXME
.)

Rules for elsif_path. :
(.
      ${Condition_Expression.Down} := 0;  --  FIXME
.)

Rules for entry_body. :
(.
      ${Entry_Barrier.Down} := 0;  --  FIXME
.)

Rules for exception_renaming_declaration. :
(.
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${exception_renaming_declaration.env_in},
         ${Renamed_Entity.Up},
         ${Renamed_Entity.Down});
.)

Rules for exit_statement. :
(.
      ${Exit_Condition.Down} := 0;  --  FIXME
.)

Rules for explicit_dereference. :
(.
      ${Prefix.Down} := 0;  --  FIXME
.)

Rules for extension_aggregate. :
(.
      ${Extension_Aggregate_Expression.Down} := 0;  --  FIXME
.)

Rules for floating_point_definition. :
(.
      ${Digits_Expression.Down} := 0;  --  FIXME
.)

Rules for formal_function_declaration. :
(.
      ${Formal_Subprogram_Default.Down} := 0;  --  FIXME
.)

Rules for formal_object_declaration. :
(.
      ${Initialization_Expression.Down} := 0;  --  FIXME
.)

Rules for formal_procedure_declaration. :
(.
      ${Formal_Subprogram_Default.Down} := 0;  --  FIXME
.)

Rules for auxiliary_apply. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${auxiliary_apply.Down}, 1, ${prefix.Down});
.)

Rules for function_declaration. :
(.
      ${Result_Expression.Down} := 0;  --  FIXME
.)

Rules for function_declaration. :
(.
      ${Renamed_Entity.Down} := 0;  --  FIXME
.)

Rules for generalized_iterator_specification. :
(.
      ${Iteration_Scheme_Name.Down} := 0;  --  FIXME
.)

Rules for generic_association. :
(.
      ${Actual_Parameter.Down} := 0;  --  FIXME
.)

Rules for generic_function_renaming. :
(.
      ${Renamed_Entity.Down} := 0;  --  FIXME
.)

Rules for generic_package_renaming. :
(.
      ${Renamed_Entity.Down} := 0;  --  FIXME
.)

Rules for generic_procedure_renaming. :
(.
      ${Renamed_Entity.Down} := 0;  --  FIXME
.)

Rules for if_expression_path. :
(.
      ${Condition_Expression.Down} := 0;  --  FIXME
.)

Rules for if_expression_path. :
(.
      ${Dependent_Expression.Down} := 0;  --  FIXME
.)

Rules for if_path. :
(.
      ${Condition_Expression.Down} := 0;  --  FIXME
.)

Rules for Membership_Test_Choices.membership_choice :
(.
      ${membership_choice.Down} := ${Membership_Test_Choices.Down};  --  FIXME
.)

Rules for Membership_Test_Choices.membership_choice :
(.
      ${tail.Down} := ${Membership_Test_Choices.Down};  --  FIXME
.)

Rules for membership_test. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${membership_test.Down}, 1, ${Membership_Test_Expression.Down});
.)

Rules for membership_test. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${membership_test.Down}, 2, ${Membership_Test_Choices.Down});
.)

Rules for modular_type_definition. :
(.
      ${Mod_Static_Expression.Down} := 0;  --  FIXME
.)

Rules for number_declaration. :
(.
      ${Initialization_Expression.Down} := 0;  --  FIXME
.)

Rules for object_declaration. :
(.
      -- 3.3.1 (4)
      Gela.Pass_Utils.Resolve.To_Type
        (Self.Compilation,
         ${object_declaration.env_in},
         ${Object_Declaration_Subtype.Up},
         ${Initialization_Expression.Up:0},
         ${Initialization_Expression.Down});
.)

Rules for object_renaming_declaration. :
(.
      ${Renamed_Entity.Down} := 0;  --  FIXME
.)

Rules for ordinary_fixed_point_definition. :
(.
      ${Delta_Expression.Down} := 0;  --  FIXME
.)

Rules for package_renaming_declaration. :
(.
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${package_renaming_declaration.env_in},
         ${Renamed_Entity.Up},
         ${Renamed_Entity.Down});
.)

Rules for parameter_association. :
(.
      ${Formal_Parameter.Down} := 0;  --  FIXME
.)

Rules for parameter_association. :
(.
      ${Actual_Parameter.Down} := 0;  --  FIXME
.)

Rules for parameter_specification. :
(.
      -- 6.1 (17)
      Gela.Pass_Utils.Resolve.To_Type
        (Self.Compilation,
         ${parameter_specification.env_in},
         ${Object_Declaration_Subtype.Up},
         ${Initialization_Expression.Up:0},
         ${Initialization_Expression.Down});
.)

Rules for pragma_argument_association. :
(.
      ${Formal_Parameter.Down} := 0;  --  FIXME
.)

Rules for pragma_argument_association. :
(.
      ${Actual_Parameter.Down} := 0;  --  FIXME
.)

Rules for pragma_node. :
(.
      ${Formal_Parameter.Down} := 0;  --  FIXME
.)

Rules for procedure_call_statement. :
(.
      --  FIXME  take parameters into account
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${procedure_call_statement.env_in},
         ${Function_Call.Up},
         ${Function_Call.Down});
.)

Rules for procedure_declaration. :
(.
      ${Renamed_Entity.Down} := 0;  --  FIXME
.)

Rules for Clause_Names.program_unit_name :
(.
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${Clause_Names.env_in}, ${program_unit_name.Up}, ${program_unit_name.Down});
.)

Rules for With_Clause_Names.program_unit_name :
(.
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${With_Clause_Names.env_in}, ${program_unit_name.Up}, ${program_unit_name.Down});
.)

Rules for defining_expanded_unit_name. :
(.
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${defining_expanded_unit_name.env_in}, ${Defining_Prefix.Up}, ${Defining_Prefix.Down});
.)

Rules for Exception_Choices.exception_choice :
(.
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${Exception_Choices.env_in}, ${exception_choice.Up}, ${exception_choice.Down});
.)

Rules for exit_statement. :
(.
      ${Exit_Loop_Name.Down} := 0;  --  FIXME
.)

Rules for formal_package_declaration. :
(.
      ${Generic_Unit_Name.Down} := 0;  --  FIXME
.)

Rules for function_body. :
(.
      ${end_name.Down} := 0;  --  FIXME
.)

Rules for function_instantiation. :
(.
      ${Generic_Unit_Name.Down} := 0;  --  FIXME
.)

Rules for generic_package_declaration. :
(.
      ${end_name.Down} := 0;  --  FIXME
.)

Rules for goto_statement. :
(.
      ${Goto_Label.Down} := 0;  --  FIXME
.)

Rules for package_body. :
(.
      ${end_name.Down} := 0;  --  FIXME
.)

Rules for package_declaration. :
(.
      ${end_name.Down} := 0;  --  FIXME
.)

Rules for package_instantiation. :
(.
      ${Generic_Unit_Name.Down} := 0;  --  FIXME
.)

Rules for procedure_body. :
(.
      ${end_name.Down} := 0;  --  FIXME
.)

Rules for procedure_instantiation. :
(.
      ${Generic_Unit_Name.Down} := 0;  --  FIXME
.)

Rules for qualified_expression. :
(.
      ${Converted_Or_Qualified_Expression.Down} := 0;  --  FIXME
.)

Rules for quantified_expression. :
(.
      ${predicate.Down} := 0;  --  FIXME
.)

Rules for raise_statement. :
(.
      ${Raised_Exception.Down} := 0;  --  FIXME
.)

Rules for raise_statement. :
(.
      ${Raise_Statement_Message.Down} := 0;  --  FIXME
.)

Rules for record_aggregate.Associations :
(.
      ${Associations.Down} := ${record_aggregate.Down};
.)

Rules for record_representation_clause. :
(.
      ${Representation_Clause_Name.Down} := 0;  --  FIXME
.)

Rules for record_representation_clause. :
(.
      ${Mod_Clause_Expression.Down} := 0;  --  FIXME
.)

Rules for requeue_statement. :
(.
      ${Requeue_Entry_Name.Down} := 0;  --  FIXME
.)

Rules for return_object_specification. :
(.
      ${Initialization_Expression.Down} := 0;  --  FIXME
.)

Rules for select_or_path. :
(.
      ${Guard.Down} := 0;  --  FIXME
.)

Rules for selected_component. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${selected_component.Down}, 1, ${prefix.Down});
.)

Rules for selected_identifier. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${selected_identifier.Down}, 1, ${Prefix.Down});
.)

Rules for selected_identifier. :
(.
      ${Selector.Down} := ${selected_identifier.Down};
.)

Rules for generic_association. :
(.
      ${Formal_Parameter.Down} := 0;  --  FIXME
.)

Rules for selected_component. :
(.
      ${Selector.Down} := ${selected_component.Down};
.)

Rules for short_circuit. :
(.
      ${Short_Circuit_Operation_Left_Expression.Down} := 0;  --  FIXME
.)

Rules for short_circuit. :
(.
      ${Short_Circuit_Operation_Right_Expression.Down} := 0;  --  FIXME
.)

Rules for simple_expression_range. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${simple_expression_range.Down}, 1, ${Lower_Bound.Down});
.)

Rules for simple_expression_range. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${simple_expression_range.Down}, 2, ${Upper_Bound.Down});
.)

Rules for simple_expression_range_dr. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${simple_expression_range_dr.Down}, 1, ${Lower_Bound.Down});
.)

Rules for simple_expression_range_dr. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${simple_expression_range_dr.Down}, 2, ${Upper_Bound.Down});
.)

Rules for simple_return_statement. :
(.
      ${Return_Expression.Down} := 0;  --  FIXME
.)

Rules for subunit. :
(.
      ${parent_unit_name.Down} := 0;  --  FIXME
.)

Rules for variant_part. :
(.
      Gela.Pass_Utils.Resolve.Interpretation
        (Self.Compilation,
         ${variant_part.env_in},
         ${Discriminant_Direct_Name.Up},
         ${Discriminant_Direct_Name.Down});
.)

Rules for while_loop_statement. :
(.
      ${While_Condition.Down} := 0;  --  FIXME
.)

Rules for Index_Subtype_Definitions.subtype_mark :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${Index_Subtype_Definitions.env_in}, ${subtype_mark.Up}, ${subtype_mark.Down});
.)

Rules for Progenitor_List.subtype_mark :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${Progenitor_List.env_in}, ${subtype_mark.Up}, ${subtype_mark.Down});
.)

Rules for Type_Clause_Names.subtype_mark :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${Type_Clause_Names.env_in}, ${subtype_mark.Up}, ${subtype_mark.Down});
.)

Rules for access_to_function_definition. :
(.
      ${Access_To_Function_Result_Subtype.Down} := 0;  --  FIXME
.)

Rules for anonymous_access_to_function_definition. :
(.
      ${Access_To_Function_Result_Subtype.Down} := 0;  --  FIXME
.)

Rules for anonymous_access_to_object_definition. :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${anonymous_access_to_object_definition.env_in},
         ${Anonymous_Access_To_Object_Subtype_Mark.Up},
         ${Anonymous_Access_To_Object_Subtype_Mark.Down});
.)

Rules for aspect_specification. :
(.
      ${Aspect_Mark.Down} := 0;  --  FIXME
.)

Rules for discrete_subtype_indication. :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${discrete_subtype_indication.env_in}, ${Subtype_Mark.Up},
         ${Subtype_Mark.Down});
.)

Rules for discrete_subtype_indication_dr. :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${discrete_subtype_indication_dr.env_in}, ${Subtype_Mark.Up},
         ${Subtype_Mark.Down});
.)

Rules for discriminant_specification. :
(.
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${discriminant_specification.env_in},
         ${Object_Declaration_Subtype.Up},
         ${Object_Declaration_Subtype.Down});
.)

Rules for formal_access_to_function_definition. :
(.
      ${Access_To_Function_Result_Subtype.Down} := 0;  --  FIXME
.)

Rules for formal_derived_type_definition. :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${formal_derived_type_definition.env_in}, ${Subtype_Mark.Up},
         ${Subtype_Mark.Down});
.)

Rules for formal_function_declaration. :
(.
      ${Result_Subtype.Down} := 0;  --  FIXME
.)

Rules for formal_object_declaration. :
(.
      ${Object_Declaration_Subtype.Down} := 0;  --  FIXME
.)

Rules for function_body. :
(.
      ${Result_Subtype.Down} := 0;  --  FIXME
.)

Rules for function_declaration. :
(.
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${function_declaration.env_in},
         ${Result_Subtype.Up},
         ${Result_Subtype.Down});
.)

Rules for generic_function_declaration. :
(.
      ${Result_Subtype.Down} := 0;  --  FIXME
.)

Rules for object_renaming_declaration. :
(.
      ${Object_Declaration_Subtype.Down} := 0;  --  FIXME
.)

Rules for qualified_expression. :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${qualified_expression.env_in}, ${Converted_Or_Qualified_Subtype_Mark.Up},
         ${Converted_Or_Qualified_Subtype_Mark.Down});
.)

Rules for subtype_indication. :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${subtype_indication.env_in}, ${subtype_mark.Up}, ${subtype_mark.Down});
.)

Rules for subtype_indication. :
(.
      Gela.Pass_Utils.Resolve.Constraint
        (Subtype_Constraint,
         ${subtype_indication.env_in},
         ${subtype_mark.Up},
         ${Subtype_Constraint.Up:0},
         ${Subtype_Constraint.Down});
.)

Rules for parameter_specification. :
(.
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${parameter_specification.env_in},
         ${Object_Declaration_Subtype.Up},
         ${Object_Declaration_Subtype.Down});
.)

Rules for discrete_range_attribute_reference.Range_Attribute :
(.
      ${Range_Attribute.Down} := 0;  --  FIXME
.)

Rules for range_attribute_reference.Range_Attribute :
(.
      ${Range_Attribute.Down} := ${range_attribute_reference.Down};
.)

Rules for range_attribute_reference_dr.Range_Attribute :
(.
      ${Range_Attribute.Down} := ${range_attribute_reference_dr.Down};
.)

Rules for delta_constraint. :
(.
      ${Real_Range_Constraint.Down} := 0;  --  FIXME
.)

Rules for digits_constraint. :
(.
      ${Real_Range_Constraint.Down} := 0;  --  FIXME
.)

Rules for discrete_subtype_indication. :
(.
      ${Subtype_Constraint.Down} := 0;  --  FIXME
.)

Rules for discrete_subtype_indication_dr. :
(.
      ${Subtype_Constraint.Down} := 0;  --  FIXME
.)

Rules for auxiliary_apply. :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${auxiliary_apply.Down}, 2, ${Function_Call_Parameters.Down});
.)

Rules for extension_aggregate. :
(.
      ${Record_Component_Associations.Down} := ${extension_aggregate.Down};
.)

Rules for decimal_fixed_point_definition. :
(.
      Gela.Pass_Utils.Resolve.Real_Type
        (Self.Compilation,
         ${Real_Range_Constraint.Up:0},
         ${Real_Range_Constraint.Down});
.)

Rules for floating_point_definition. :
(.
      Gela.Pass_Utils.Resolve.Real_Type
        (Self.Compilation,
         ${Real_Range_Constraint.Up:0},
         ${Real_Range_Constraint.Down});
.)

Rules for ordinary_fixed_point_definition. :
(.
      Gela.Pass_Utils.Resolve.Real_Type
        (Self.Compilation,
         ${Real_Range_Constraint.Up:0},
         ${Real_Range_Constraint.Down});
.)

Rules for signed_integer_type_definition. :
(.
      Gela.Pass_Utils.Resolve.Signed_Integer_Type
        (Self.Compilation,
         ${Integer_Constraint.Up},
         ${Integer_Constraint.Down});
.)

Rules for access_to_object_definition. :
(.
      --  3.2.2 (8)
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${access_to_object_definition.env_in},
         ${subtype_indication.Up},
         ${subtype_indication.Down});
.)

Rules for component_definition. :
(.
      Gela.Pass_Utils.Resolve.Shall_Be_Subtype
        (Self.Compilation,
         ${component_definition.env_in},
         ${Component_Subtype_Indication.Up},
         ${Component_Subtype_Indication.Down});
.)

Rules for derived_record_definition. :
(.
      ${Parent_Subtype_Indication.Down} := 0;  --  FIXME
.)

Rules for derived_type_definition. :
(.
      ${Parent_Subtype_Indication.Down} := 0;  --  FIXME
.)

Rules for element_iterator_specification. :
(.
      ${subtype_indication.Down} := 0;  --  FIXME
.)

Rules for formal_access_to_object_definition. :
(.
      ${subtype_indication.Down} := 0;  --  FIXME
.)

Rules for full_type_declaration. :
(.
      --  Deps on ${Names.Errors}
      ${Type_Declaration_View.Down} := 0;  --  FIXME
.)

Rules for object_declaration. :
(.
      ${Object_Declaration_Subtype.Down} := 0;  --  FIXME
.)

Rules for private_extension_definition. :
(.
      ${Ancestor_Subtype_Indication.Down} := 0;  --  FIXME
.)

Rules for return_object_specification. :
(.
      ${Object_Declaration_Subtype.Down} := 0;  --  FIXME
.)

Rules for subtype_declaration. :
(.
      ${Type_Declaration_View.Down} := 0;  --  FIXME
.)

Rules for Variants.variant :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Variants.Down}, 1, ${variant.Down});
.)

Rules for Variants.variant :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Variants.Down}, 2, ${tail.Down});
.)

Rules for Case_Statement_Paths.case_path :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Case_Statement_Paths.Down}, 1, ${case_path.Down});
.)

Rules for Case_Statement_Paths.case_path :
(.
      Self.Compilation.Context.Interpretation_Manager.Get_Down_Interpretation
        (${Case_Statement_Paths.Down}, 2, ${tail.Down});
.)

Rules for variant. :
(.
      ${Variant_Choices.Down} := ${variant.Down};
.)

Rules for variant_part. :
(.
      --  Depends on ${Variants.env_out}
      Gela.Pass_Utils.Resolve.Variant_Part
        (Self.Compilation,
         ${Discriminant_Direct_Name.Up},
         ${Variants.Up},
         ${Variants.Down});
.)

Rules for case_path. :
(.
      ${Variant_Choices.Down} := ${case_path.Down};
.)

Rules for case_statement. :
(.
      Gela.Pass_Utils.Resolve.Case_Statement
        (Self.Compilation,
         ${case_statement.env_in},
         ${Case_Expression.Up},
         ${Case_Statement_Paths.Up},
         ${Case_Statement_Paths.Down});
.)
